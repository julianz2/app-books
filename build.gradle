plugins {
    id 'java'
    id 'application'
    id "io.freefair.lombok" version "6.6.1"
    id "org.flywaydb.flyway" version "9.8.1"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    helidonversion = '3.0.2'
    mainClass='io.helidon.microprofile.cdi.Main'
}

dependencies {
    implementation platform("io.helidon:helidon-dependencies:${project.helidonversion}")
    implementation 'io.helidon.microprofile.server:helidon-microprofile-server'
    //implementation 'io.helidon.microprofile.bundles:helidon-microprofile'
    implementation 'org.glassfish.jersey.media:jersey-media-json-binding'
    runtimeOnly 'org.jboss:jandex'
    // https://mvnrepository.com/artifact/org.jdbi/jdbi3
    // https://mvnrepository.com/artifact/org.jdbi/jdbi3-core
    implementation group: 'org.jdbi', name: 'jdbi3-core', version: '3.36.0'
    implementation group: 'org.jdbi', name: 'jdbi3-sqlobject', version: '3.36.0'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.1'
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'
    // https://mvnrepository.com/artifact/org.flywaydb/flyway-core
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.11.0'
    // https://mvnrepository.com/artifact/io.helidon.dbclient/helidon-dbclient
    implementation group: 'io.helidon.dbclient', name: 'helidon-dbclient', version: '3.1.0'
    // https://mvnrepository.com/artifact/io.helidon.dbclient/helidon-dbclient-jdbc
    implementation group: 'io.helidon.dbclient', name: 'helidon-dbclient-jdbc', version: '3.1.0'


}

flyway {
    url = 'jdbc:postgresql://localhost:5432/distribuidas'
    user = 'postgres'
    password = 'admin'
    schemas = ['public']
}

sourceSets {
    main {
        output.resourcesDir = file("${buildDir}/classes/java/main")
    }
}

task copyLibs(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/libs'
}

jar {
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes ('Main-Class': "${project.mainClass}" ,
                'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
        )
    }
}

application {
    mainClass = "${project.mainClass}"
}